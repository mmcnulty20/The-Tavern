{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/game/hud.js","webpack:///./src/game/utils/canvas_utils.js","webpack:///./src/game/player/humanPlayer.js","webpack:///./src/game/utils/server_utils.js","webpack:///./src/game/utils/game_utils.js","webpack:///./src/game/player/pigAi.js","webpack:///./src/game/utils/loading_utils.js","webpack:///./src/game/pig/pig-game.js","webpack:///./resources/pixel_assets/dice/1.png","webpack:///./resources/pixel_assets/dice/2.png","webpack:///./resources/pixel_assets/dice/3.png","webpack:///./resources/pixel_assets/dice/4.png","webpack:///./resources/pixel_assets/dice/5.png","webpack:///./resources/pixel_assets/dice/6.png","webpack:///./src/game/pig/pig-display.js","webpack:///./src/game/pig/instructions.js","webpack:///./src/game/choose_game.js","webpack:///./src/game/welcomeScreen.js","webpack:///./src/game/chooseName.js","webpack:///./src/game/baseSetup.js","webpack:///./src/join/joinGame.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","HUD","canv","player","numPlayers","this","ctx","getContext","menu","rectButton","alert","x","y","w","h","fill","buttonText","textColor","fillStyle","strokeStyle","textAlign","font","fillText","fillRect","color","percent","points","render","addEventListener","clicked","restore","numPoints","earnPoints","playerHUD","thisPlayer","Player","health","connectedPlayers","socket","on","players","newConnected","keys","forEach","connection","modal","clearWithHUD","clearRect","sessionStorage","getItem","onClick","strokeColor","strokeWidth","noStroke","bgColorChange","save","beginPath","lineWidth","strokewidth","rect","stroke","textBaseline","e","bounds","getBoundingClientRect","mouseXPos","clientX","mouseYPos","clientY","mouseInside","shufflePlayerOrder","allPlayers","order","length","push","splice","Math","floor","random","pigAi","loader","sources","images","callback","image","Image","src","onload","imagesStore","loadImages","pig","currentPlayerIndex","user","numRolls","tempScore","endTurn","roll","turn","playerOrder","currentPlayer","result","scores","setTimeout","switchPlayers","playTurn","emit","handleOne","roboTurn","winner","holding","closePath","lastRoll","face","activePlayer","rollBtn","holdBtn","btnColor","diceRender","img","myIdx","strokeText","drawImage","rollEvent","one","two","three","four","five","six","values","shuffleToBegin","play","Array","map","id","gameOver","win","idx","findIndex","score","undefined","find","pigDisplay","game","preRender","controllingPlayer","setup","pigInstructions","start","chooseGame","pigButton","settingExplanation","str","buttonTest","once","welcomeScreen","chooseName","canvas","document","getElementById","joinGame","joinBtn","nameInput","colorInput","textColorInput","demo","submitBtn","className","currentName","target","innerHTML","style","preventDefault","setItem","removeItem"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,IAIjBlC,EAAoBA,EAAoBmC,EAAI,G,uOCjBtCC,E,WA9DX,WAAYC,EAAMC,EAAQC,I,4FAAY,SAClCC,KAAKF,OAASA,EACdE,KAAKD,WAAaA,EAClBC,KAAKH,KAAOA,EACZG,KAAKC,IAAMJ,EAAKK,WAAW,MAE3BF,KAAKG,KAAO,IAAIC,EAAWP,GAAM,kBAAMQ,MAAM,kBAAiB,CAC1DlC,KAAM,OACNmC,EAAG,IACHC,EAAG,EACHC,EAAG,GACHC,EAAG,GACHC,KAAM,YACNC,WAAY,IACZC,UAAW,U,wDAMf,IAAMX,EAAMD,KAAKC,IAEjBA,EAAIY,UAAY,QAChBZ,EAAIa,YAAc,OAClBb,EAAIc,UAAY,SAChBd,EAAIe,KAAO,eACXf,EAAIgB,SAASjB,KAAKD,WAAY,GAAI,IAQlCE,EAAIiB,SAAS,MAAM,GAAG,IAAI,IAE1BjB,EAAIY,UAAYb,KAAKF,OAAOqB,MAC5BlB,EAAIiB,SAAS,MAAO,GAA8B,IAAxBlB,KAAKF,OAAOsB,UAAmB,IAEzDnB,EAAIY,UAAY,YAChBZ,EAAIiB,SAAS,IAAI,EAAE,GAAG,IAEtBjB,EAAIe,KAAO,eAGXf,EAAIY,UAAYb,KAAKF,OAAOc,UAC5BX,EAAIgB,SAASjB,KAAKF,OAAO3B,KAAM,IAAK,IACpC8B,EAAIgB,SAASjB,KAAKF,OAAOuB,OAAQ,IAAK,IAEtCrB,KAAKG,KAAKmB,SACVtB,KAAKH,KAAK0B,iBAAiB,QAASvB,KAAKG,KAAKqB,SAE9CvB,EAAIwB,Y,iCAIGC,GACP1B,KAAKF,OAAO6B,WAAWD,GACvB1B,KAAKsB,c,0MC3DTM,EAEOC,ECmBIC,E,WAtBX,cAAoE,IAAtDX,EAAsD,EAAtDA,MAAsD,IAA/ChD,YAA+C,MAAxC,YAAwC,MAA3B4D,cAA2B,MAAlB,IAAkB,EAAbnB,EAAa,EAAbA,W,4FAAa,SAChEZ,KAAKmB,MAAQA,EACbnB,KAAK7B,KAAOA,EACZ6B,KAAK+B,OAASA,EACd/B,KAAKqB,OAAS,EACdrB,KAAKY,UAAYA,E,0DAGVc,GACP1B,KAAKqB,QAAUK,EACf1B,KAAK+B,QAAuB,EAAZL,I,6BAIhB,OAAO1B,KAAK+B,QAAU,I,gCAItB,OAAO/B,KAAK+B,OAAS,S,gCChBlBC,EAAmB,G,sKAE9BC,OAAOC,GAAG,SAAS,YAAiB,IAAdC,EAAc,EAAdA,QACZC,EAAe,GACrB9D,OAAO+D,KAAKF,GAASG,SAAS,SAAAC,GACrBP,EAAiBO,GAClBH,EAAaG,GAAcP,EAAiBO,GAG5CH,EAAaG,GAAc,IAAIT,EAAOK,EAAQI,OAGtDP,EAAmBI,KFTvB,IAIaI,EAAQ,SAAAvC,GACjBA,EAAIY,UAAY,kBAChBZ,EAAIiB,SAAS,EAAG,EAAG,IAAK,MAIfuB,EAAe,SAAC5C,EAAMI,GAVV,IAAAH,EAWrBG,EAAIyC,UAAU,EAAG,EAAG,IAAK,KACpBb,IAZgB/B,EAYa6C,eAAeC,QAAQ,UAXzDf,EAAaA,GAAcG,EAAiBlC,KAY5C8B,EAAYA,GAAa,IAAIhC,EAAIC,EAAMgC,EAAY,IACzCP,UAGDlB,EAAb,WACI,WAAYP,EAAMgD,EAAlB,GAAgI,IAAnG1E,EAAmG,EAAnGA,KAAMmC,EAA6F,EAA7FA,EAAGC,EAA0F,EAA1FA,EAAGC,EAAuF,EAAvFA,EAAGC,EAAoF,EAApFA,EAAGC,EAAiF,EAAjFA,KAAMoC,EAA2E,EAA3EA,YAAaC,EAA8D,EAA9DA,YAA8D,IAAjDC,gBAAiD,SAAhCrC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,UAAWI,EAAS,EAATA,M,4FAAS,SAC5HhB,KAAK7B,KAAOA,EACZ6B,KAAKM,EAAIA,EACTN,KAAKO,EAAIA,EACTP,KAAKQ,EAAIA,EACTR,KAAKS,EAAIA,EACTT,KAAKU,KAAOA,EACZV,KAAK8C,YAAcA,EACnB9C,KAAK+C,YAAcA,EACnB/C,KAAKgD,SAAWA,EAGhBhD,KAAKH,KAAOA,EACZG,KAAK6C,QAAUA,EAEf7C,KAAKW,WAAaA,EAClBX,KAAKgB,KAAOA,EACZhB,KAAKY,UAAYA,GAAa,QAE9BZ,KAAKwB,QAAUxB,KAAKwB,QAAQpC,KAAKY,M,UApBzC,O,EAAA,G,EAAA,8BAuBWiD,GACH,IAAMhD,EAAMD,KAAKH,KAAKK,WAAW,MACjCD,EAAIiD,OACJjD,EAAIkD,YACAnD,KAAKU,OAAMT,EAAIY,UAAYb,KAAKU,MAChCuC,IAAehD,EAAIY,UAAYoC,GAC/BjD,KAAK8C,cAAa7C,EAAIa,YAAYd,KAAK8C,aACvC9C,KAAK+C,cAAa9C,EAAImD,UAAUpD,KAAKqD,aACzCpD,EAAIqD,KAAKtD,KAAKM,EAAGN,KAAKO,EAAGP,KAAKQ,EAAGR,KAAKS,GAChCT,KAAKgD,UAAW/C,EAAIsD,SAC1BtD,EAAIS,OAEAV,KAAKW,aACLV,EAAIY,UAAYb,KAAKY,UACrBX,EAAIc,UAAY,SAChBd,EAAIuD,aAAe,SACnBvD,EAAIgB,SAASjB,KAAKW,WAAaX,KAAKM,EAAMN,KAAKQ,EAAI,EAAOR,KAAKO,EAAMP,KAAKS,EAAI,IAGlFR,EAAIwB,YA1CZ,kCA6CgBnB,EAAEC,GACV,OACMD,EAAIN,KAAKM,GAAKA,EAAKN,KAAKM,EAAIN,KAAKQ,GAChCD,EAAIP,KAAKO,GAAKA,EAAKP,KAAKO,EAAIP,KAAKS,IAhDhD,8BAoDYgD,GACJ,IAAMC,EAAS1D,KAAKH,KAAK8D,wBAEnBC,EAAYH,EAAEI,QAAUH,EAAOpD,EAC/BwD,EAAYL,EAAEM,QAAUL,EAAOnD,EACjCP,KAAKgE,YAAYJ,EAAWE,IAC5B9D,KAAK6C,e,2BA1DjB,KGrBaoB,EAAqB,SAACC,GAE/B,IADA,IAAMC,EAAQ,GACPD,EAAWE,OAAS,GACvBD,EAAME,KACFH,EAAWI,OACPC,KAAKC,MAAOD,KAAKE,SAAWP,EAAWE,QAAU,GACnD,IAGV,OAAOD,G,uiCCHIO,E,gQALX,aAAa,O,4FAAA,qBACH,CAACvG,KAAM,qBAAsBgD,MAAO,UAAWP,UAAW,U,UAFpDkB,GCFd6C,EAAS,SAACC,EAASC,EAAQC,GAa7B,OAZAxG,OAAO+D,KAAKuC,GAAStC,SAAS,SAAAnE,GAC1B,GAAM0G,EAAO1G,GAQT2G,EAAS3G,EAAM0G,EAAO1G,QARL,CACjB,IAAI4G,EAAQ,IAAIC,MAChBD,EAAME,IAAML,EAAQzG,GACpB4G,EAAMG,OAAS,WACXL,EAAO1G,GAAQ4G,EACfD,EAAS3G,EAAM4G,SAMpB,GAGAI,EAAc,GAEZC,EAAa,SAAER,EAASE,GAAmC,IAAzBD,EAAyB,uDAAhBM,EAEpD,OADAR,EAAOC,EAASC,EAAQC,GACjBD,G,0KCkSIQ,E,WAzSX,WAAaxF,EAAMI,GAAM,Y,4FAAA,SACrBD,KAAKsF,mBAAqB,EAE1BtF,KAAKH,KAAOA,EACZG,KAAKC,IAAMA,EAEXD,KAAKuF,KAAO1D,EAEZ7B,KAAKwF,SAAW,EAChBxF,KAAKyF,UAAY,EAEjBxD,OAAOC,GAAG,QAAQ,WACd,EAAKwD,aAETzD,OAAOC,GAAG,QAAQ,SAAAyD,GACd,EAAKC,KAAKD,M,+DAMd3F,KAAKsF,mBACAtF,KAAKsF,mBAAqB,EAAOtF,KAAK6F,YAAYzB,OAC/CpE,KAAKsF,mBAAqB,EAAI,EACtCtF,KAAK8F,cAAgB9F,KAAK6F,YAAY7F,KAAKsF,sB,6BAI3C,OAAOf,KAAKC,MAAsB,EAAhBD,KAAKE,SAAe,K,iCAItC,OAAOzE,KAAKuF,OAASvF,KAAK8F,cAAgB,QAAU,S,2BAGnDC,GACD,OAAQA,GACJ,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,QACX,KAAK,EACD,MAAO,OACX,KAAK,EACD,MAAO,OACX,KAAK,EACD,MAAO,MACX,QACI,OAAO,Q,gCAIV,WACL/F,KAAKgG,OAAOhG,KAAKsF,qBAAuBtF,KAAKyF,UAC7CzF,KAAKyF,UAAY,EACjBzF,KAAKwF,SAAW,EAChBxF,KAAK8F,cAAgB,KACrB9F,KAAKsB,SACL2E,YAAY,WACR,EAAKC,gBACL,EAAK5E,SACL,EAAK6E,aACN,O,kCAKHnG,KAAKyF,UAAY,EACjBzF,KAAK8F,cAAcnE,WAAW3B,KAAKwF,UACnCxF,KAAK0F,QAAQ,K,kCAIb,IAAMC,EAAO3F,KAAK2F,OAClB1D,OAAOmE,KAAK,OAAQT,GACpB3F,KAAK4F,KAAKD,K,2BAGTA,GAQD,OAPA3F,KAAKwF,UAAY,EACJ,IAATG,EACA3F,KAAKqG,YAELrG,KAAKyF,WAAaE,EAEtB3F,KAAKsB,OAAOqE,GACI,IAATA,I,iCAGA,WACPM,YAAY,WACH,EAAKR,UAAY,GACb,EAAKG,KAAK,EAAKD,SAAU,EAAKW,WAEnC,EAAKZ,YAEV,O,6BAGAK,EAAQQ,GAAwB,WAAhBC,EAAgB,wDAC7BvG,EAAMD,KAAKC,IA+BjB,GA9BAwC,EAAazC,KAAKH,KAAMI,GAExBA,EAAIkD,YACJlD,EAAIqD,KAAK,GAAG,IAAI,IAAI,KACpBrD,EAAIa,YAAc,QAClBb,EAAIY,UAAY,eAChBb,KAAKC,IAAIwG,YACTxG,EAAIsD,SACJtD,EAAIS,OAEJT,EAAIkD,YACJlD,EAAIqD,KAAK,IAAI,IAAI,IAAI,KACrBrD,EAAIY,UAAY,UAChBZ,EAAIa,YAAc,UAClBb,EAAImD,UAAY,GAChBpD,KAAKC,IAAIwG,YACTxG,EAAIS,OACJT,EAAIsD,SACwB,OAAvBvD,KAAK8F,gBACN9F,KAAK0G,SAAW1G,KAAK2G,KAAKZ,GAC1B/F,KAAK4G,aAAe5G,KAAK8F,eAExBU,GACDxG,KAAK6G,QAAQvF,OAAO,QACpBtB,KAAK8G,QAAQxF,OAAO,UAEpBtB,KAAK6G,QAAQvF,OAAOtB,KAAK+G,YACzB/G,KAAK8G,QAAQxF,OAAOtB,KAAK+G,aAE7B9G,EAAIkD,aACG4C,GAAiC,OAAvB/F,KAAK8F,iBAA6BU,EAAU,CACzD,IAAIG,EAAO3G,KAAK2G,KAAKZ,IAAW/F,KAAK0G,SAChCvB,EAAYwB,GACb3G,KAAKgH,WAAW7B,EAAYwB,IAE5BvB,EAAYpF,KAAK4E,SAAS,SAACzG,EAAM8I,GACxB9I,IAASwI,GAAO,EAAKK,WAAWC,MAMjD,GAFAjH,KAAKC,IAAIwG,YACTxG,EAAImD,UAAY,EACXmD,EACDtG,EAAIgB,SAAJ,UAAgBsF,EAAOpI,KAAvB,UAAqC,IAAK,UACvC,GAAKqI,EACRvG,EAAIgB,SAAJ,kCAAgD,IAAK,SAClD,CACHhB,EAAIc,UAAY,SAChBd,EAAIgB,SAAJ,mBAAyBjB,KAAKyF,WAAa,IAAK,KAChDxF,EAAIgB,SAASjB,KAAKuF,KAAKpH,KAAM,IAAK,KAClC8B,EAAIgB,SAASjB,KAAKgG,OAAOhG,KAAKkH,OAAQ,IAAK,KAC3CjH,EAAIc,UAAY,QAChBd,EAAIgB,SAAS,cAAe,IAAK,KACjChB,EAAIY,UAAYb,KAAK4G,aAAahG,UAClCX,EAAIa,YAAcd,KAAK4G,aAAazF,MACpClB,EAAIgB,SAASjB,KAAK4G,aAAazI,KAAM,IAAK,KAC1C8B,EAAIkH,WAAWnH,KAAK4G,aAAazI,KAAM,IAAK,KAE5C8B,EAAIY,UAAYb,KAAKuF,KAAKpE,MAC1BlB,EAAIiB,SAAS,IAAI,IAAI,IAAI,IACzB,IAAI7B,EAAI,EACRY,EAAIc,UAAY,SAChBf,KAAK6F,YAAYvD,SAAS,SAAExC,EAAQlC,GAC3BkC,IAAW,EAAKyF,OACjBtF,EAAIY,UAAYf,EAAOqB,MACvBlB,EAAIiB,SAAU,IAAW,GAAJ7B,EAAU,IAAK,GAAI,IACxCY,EAAIY,UAAYf,EAAOc,UACvBX,EAAIgB,SAAS,EAAK+E,OAAOpI,GAAI,IAAW,GAAJyB,EAAS,KAC7CA,GAAK,S,iCAMV4H,GACPjH,KAAKC,IAAIkD,YACTnD,KAAKC,IAAImH,UAAUH,EAAK,IAAK,KAC7BjH,KAAKC,IAAIwG,c,6BAGP,WACFzG,KAAK6G,QAAU,IAAIzG,EAAWJ,KAAKH,MAAM,WAChC,EAAK0F,OAAS,EAAKO,eACpB,EAAKuB,cACL,CACJlJ,KAAM,OACNmC,EAAG,IACHC,EAAG,MACHC,EAAG,IACHC,EAAG,GACHE,WAAY,OACZC,UAAW,QACXI,KAAM,iBAEVhB,KAAK8G,QAAU,IAAI1G,EAAWJ,KAAKH,MAAM,WAChC,EAAK0F,OAAS,EAAKO,gBACpB7D,OAAOmE,KAAK,QACZ,EAAKV,aAEV,CACCvH,KAAM,OACNmC,EAAG,IACHC,EAAG,MACHC,EAAG,IACHC,EAAG,GACHE,WAAY,OACZC,UAAW,QACXI,KAAM,iBAEVhB,KAAKH,KAAK0B,iBAAiB,QAASvB,KAAK6G,QAAQrF,SACjDxB,KAAKH,KAAK0B,iBAAiB,QAASvB,KAAK8G,QAAQtF,SAEjDxB,KAAK4E,QAAU,CAAE0C,ICpOV,qBDoOeC,IEpOf,qBFoOoBC,MGpOpB,qBHoO2BC,KIpO3B,qBJoOiCC,KKpOjC,qBLoOuCC,IMpOvC,sBNqOP3H,KAAKsB,SACLtB,KAAKmG,a,kCAKLnG,KAAK6G,QAAU,IAAIzG,EAAWJ,KAAKH,MAAM,cAAU,CAC/C1B,KAAM,OACNmC,EAAG,IACHC,EAAG,MACHC,EAAG,IACHC,EAAG,GACHE,WAAY,OACZC,UAAW,QACXI,KAAM,iBAEVhB,KAAK8G,QAAU,IAAI1G,EAAWJ,KAAKH,MAAM,cAAU,CAC/C1B,KAAM,OACNmC,EAAG,IACHC,EAAG,MACHC,EAAG,IACHC,EAAG,GACHE,WAAY,OACZC,UAAW,QACXI,KAAM,iBAGV,IAAMkD,EAAa5F,OAAOsJ,OAAO5F,GAGN,IAAtBkC,EAAWE,QACZF,EAAWG,KAAK,IAAIK,GACpB1E,KAAK6H,eAAe3D,GACpBlE,KAAK8H,QAEL9H,KAAKsB,OAAO,KAAK,MAAK,K,qCAIf4C,GACX,IAAMnE,EAAamE,EAAWE,OAC9BpE,KAAKgG,OAAS,IAAI+B,MAAMhI,GAAYW,KAAK,GACzCV,KAAK6F,YAAc5B,EAAmBC,GACtClE,KAAK8F,cAAgB9F,KAAK6F,YAAY7F,KAAKsF,oBAC3CtF,KAAKkH,MAAQlH,KAAKuF,OAASvF,KAAK8F,cAAgB,EAAI,I,4BAGlD3B,GAAO,WACTnE,KAAK6F,YAAc1B,EAAM6D,KAAK,SAAEzF,EAAY3E,GAExC,OADK2E,IAAeN,OAAOgG,KAAK,EAAKf,MAAQtJ,GACtCoE,EAAiBO,MAE5BvC,KAAKgG,OAAS,IAAI+B,MAAM/H,KAAK6F,YAAYzB,QAAQ1D,KAAK,GACtDV,KAAK8F,cAAgB9F,KAAK6F,YAAY,GACtC7F,KAAK8H,S,iCAIC9H,KAAKkI,WAKPlI,KAAKmI,MAJAnI,KAAK8F,yBAAyBpB,GAC/B1E,KAAKsG,a,4BAQb,IAAM8B,EAAMpI,KAAKgG,OAAOqC,WAAW,SAAAC,GAAK,OAAIA,GAAS,OAC/C/B,EAASvG,KAAK6F,YAAYuC,GAChCpI,KAAK8F,cACL9F,KAAKsB,YAAOiH,EAAWhC,K,iCAKvB,QADavG,KAAKgG,OAAOwC,MAAM,SAAAF,GAAK,OAAIA,GAAS,Y,gCOvR1CG,EAlBI,SAAC5I,EAAMI,GAEtBwC,EAAa5C,EAAMI,GACnB,IAAMyI,EAAO,IAAIrD,EAAIxF,EAAMI,EAAK,CAAE4B,IAClC6G,EAAKC,YACyC,IAAzCrK,OAAO+D,KAAKL,GAAkBoC,SAC/BnC,OAAOC,GAAG,aAAa,SAAA0G,GACnB,GAAK3G,OAAOgG,KAAOW,EAAoB,CACnC,IAAMzE,GVAZD,EAAa5F,OAAO+D,KAAKL,GACxBiC,EAAmBC,IUAdjC,OAAOmE,KAAK,iBAAkBjC,GVFP,IAC7BD,KUIFjC,OAAOC,GAAG,gBAAgB,SAAAiC,GACtBuE,EAAKG,MAAM1E,QCiBR2E,EAjCS,SAACjJ,EAAMI,GAC3BwC,EAAa5C,EAAMI,GACnBuC,EAAMvC,GAENA,EAAIkD,YACJlD,EAAIqD,KAAK,GAAG,GAAG,IAAI,KACnBrD,EAAIY,UAAY,eAChBZ,EAAIa,YAAc,OAClBb,EAAIsD,SACJtD,EAAIS,OACJT,EAAIY,UAAY,QAChBZ,EAAIc,UAAY,SAChBd,EAAIgB,SAAS,mBAAoB,IAAK,KAEtC,IAAM8H,EAAQ,IAAI3I,EAAWP,GAAM,WAC3BoC,OAAOmE,KAAK,SACZf,EAAIxF,EAAMI,KACX,CACH9B,KAAM,gBACNmC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,GACHC,KAAM,MACNC,WAAY,QACZC,UAAW,UAEfmI,EAAMzH,SACNzB,EAAK0B,iBAAiB,QAASwH,EAAMvH,SAErCvB,EAAIgB,SAAS,4DAA6D,IAAK,MCFpE+H,EA5BI,SAACnJ,EAAMI,GACtBwC,EAAa5C,EAAMI,GACnBuC,EAAMvC,GAENA,EAAIkD,YACJlD,EAAIqD,KAAK,IAAI,GAAG,IAAI,KACpBrD,EAAIY,UAAY,eAChBZ,EAAIa,YAAc,OAClBb,EAAIsD,SACJtD,EAAIS,OACJT,EAAIY,UAAY,QAChBZ,EAAIc,UAAY,SAChBd,EAAIgB,SAAS,+BAAgC,IAAK,KAElD,IAAMgI,EAAY,IAAI7I,EAAWP,GAAM,kBAAMiJ,EAAgBjJ,EAAMI,KAAM,CACrE9B,KAAM,UACNmC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,GACHC,KAAM,MACNC,WAAY,MACZC,UAAW,UAEfqI,EAAU3H,SACVzB,EAAK0B,iBAAiB,QAAS0H,EAAUzH,UCTvC0H,EAAqB,SAAErJ,EAAMI,GAAR,OAAiB,WACxCwC,EAAa5C,EAAMI,GACnBuC,EAAMvC,GAGNA,EAAIkD,YACJlD,EAAIqD,KAAK,IAAI,GAAG,IAAI,KACpBrD,EAAIY,UAAY,eAChBZ,EAAIa,YAAc,OAClBb,EAAIsD,SACJtD,EAAIS,OAEJT,EAAIc,UAAY,SAChBd,EAAIe,KAAO,eACXf,EAAIY,UAAY,QAChBZ,EAAIgB,SAAS,sCAAuC,IAAK,KAEzDhB,EAAIe,KAAO,eAWXf,EAAIc,UAAY,OAVE,CACd,sEACA,uEACA,wEACA,uEACA,0EACA,uEACA,mDAIMuB,SAAS,SAAC6G,EAAKvL,GAAN,OAAYqC,EAAIgB,SAASkI,EAAK,IAAK,IAAW,GAAJvL,MAC7DqC,EAAIe,KAAO,eAMXf,EAAIc,UAAY,SALC,CACb,iDACA,4CAIKuB,SAAS,SAAC6G,EAAKvL,GAAN,OAAYqC,EAAIgB,SAASkI,EAAK,IAAK,IAAY,GAAJvL,MAE7D,IAAMwL,EAAa,IAAIhJ,EAAWP,GAAM,kBAAMmJ,EAAWnJ,EAAMI,KAAM,CACjE9B,KAAM,OACNmC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,GACHC,KAAM,OACNC,WAAY,WACZC,UAAW,UAEfwI,EAAW9H,SACXzB,EAAK0B,iBAAiB,QAAS6H,EAAW5H,QAAS,CAAC6H,MAAM,MAG/CC,EAvEO,SAACzJ,EAAMI,GACzBwC,EAAa5C,EAAMI,GACnBuC,EAAMvC,GACNA,EAAIc,UAAY,SAChBd,EAAIY,UAAY,UAChBZ,EAAIe,KAAO,eACXf,EAAIgB,SAAS,aAAc,IAAK,KAChChB,EAAIe,KAAO,eACXf,EAAIgB,SAAS,aAAc,IAAK,KAEhChB,EAAIe,KAAO,eACXf,EAAIgB,SAAS,iBAAkB,IAAK,KAGpCpB,EAAK0B,iBAAiB,QAAS2H,EAAmBrJ,EAAMI,GAAM,CAACoJ,MAAM,KCO1DE,EApBI,SAAC1J,EAAMI,GAChB0C,eAAeC,QAAQ,UAezB0G,EAAczJ,EAAKI,IAdnBuC,EAAMvC,GAENA,EAAIkD,YACJlD,EAAIqD,KAAK,IAAI,IAAI,IAAI,KACrBrD,EAAIY,UAAY,eAChBZ,EAAIa,YAAc,OAClBb,EAAIsD,SACJtD,EAAIS,OAEJT,EAAIc,UAAY,SAChBd,EAAIY,UAAY,QAChBZ,EAAIe,KAAO,eACXf,EAAIgB,SAAS,uCAAwC,IAAK,OCLnD4H,EAND,WACV,IAAMW,EAASC,SAASC,eAAe,QACjCzJ,EAAMuJ,EAAOtJ,WAAW,MAC9BqJ,EAAWC,EAAQvJ,ICwCR0J,EA7CE,WACb,IAAMC,EAAUH,SAASC,eAAe,QAClClH,EAAQiH,SAASC,eAAe,oBAEhCG,EAAYJ,SAASC,eAAe,QACpCI,EAAaL,SAASC,eAAe,SACrCK,EAAiBN,SAASC,eAAe,cACzCM,EAAOP,SAASC,eAAe,QAC/BO,EAAYR,SAASC,eAAe,iBAE1CE,EAAQrI,iBAAiB,SAAS,WAC9BiB,EAAM0H,UAAY1H,EAAM0H,UAAY,GAAK,YAG7C,IAAIC,EAAc,GACdhJ,EAAQ,UACRP,EAAY,UAEhBiJ,EAAUtI,iBAAiB,SAAS,SAAAkC,GAChC0G,EAAc1G,EAAE2G,OAAOvL,MACvBmL,EAAKK,UAAL,gBAA2BF,EAA3B,cAGJL,EAAWvI,iBAAiB,UAAU,SAAAkC,GAClCtC,EAAQsC,EAAE2G,OAAOvL,MACjBmL,EAAKM,MAAL,iBAAwB1J,EAAxB,yBAAoDO,MAGxD4I,EAAexI,iBAAiB,UAAU,SAAAkC,GACtC7C,EAAY6C,EAAE2G,OAAOvL,MACrBmL,EAAKM,MAAL,iBAAwB1J,EAAxB,yBAAoDO,MAGxD8I,EAAU1I,iBAAiB,SAAS,SAAAkC,GAChCA,EAAE8G,iBACG5H,eAAeC,QAAQ,YACxBX,OAAOmE,KAAK,aAAc,CAAEjI,KAAMgM,EAAahJ,QAAOP,cACtDqF,YAAY,WACRtD,eAAe6H,QAAQ,SAAUvI,OAAOgG,IACxCY,MACD,UCxCfY,SAASlI,iBAAiB,oBAAoB,WAC1CoB,eAAe8H,WAAW,UAC1Bd,IACAd","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","import { rectButton } from \"./utils/canvas_utils\";\n\nclass HUD {\n    constructor(canv, player, numPlayers) {\n        this.player = player;\n        this.numPlayers = numPlayers;\n        this.canv = canv;\n        this.ctx = canv.getContext(\"2d\");\n\n        this.menu = new rectButton(canv, () => alert(\"menu opened!\"), {\n            name: \"menu\",\n            x: 750,\n            y: 5,\n            w: 30,\n            h: 25,\n            fill: \"#ffffff7e\",\n            buttonText: \"☰\",\n            textColor: \"black\"\n        })\n    }\n\n    render(){\n    // render(player){\n        const ctx = this.ctx;\n\n        ctx.fillStyle = \"white\";\n        ctx.strokeStyle = \"grey\";\n        ctx.textAlign = \"center\";\n        ctx.font = \"20px Georgia\"\n        ctx.fillText(this.numPlayers, 30, 30)\n\n        // if (player) {\n        //     ctx.textAlign = \"left\";\n        //     ctx.fillText(player, 70, 30);\n        //     ctx.textAlign = \"center\";\n        // }\n        \n        ctx.fillRect(262.5,10,275,30);\n\n        ctx.fillStyle = this.player.color\n        ctx.fillRect(267.5, 15, ( this.player.percent() * 265 ), 20);\n\n        ctx.fillStyle = \"#ffffff7e\";\n        ctx.fillRect(675,5,60,25)\n\n        ctx.font = \"16px Georgia\"\n        // ctx.strokeText(this.player.name, 400, 29);\n        // ctx.strokeText(this.player.points, 705, 22)\n        ctx.fillStyle = this.player.textColor\n        ctx.fillText(this.player.name, 400, 29);\n        ctx.fillText(this.player.points, 705, 22)\n\n        this.menu.render();\n        this.canv.addEventListener(\"click\", this.menu.clicked );\n\n        ctx.restore();\n\n    }\n\n    earnPoints(numPoints) {\n        this.player.earnPoints(numPoints);\n        this.render();\n    }\n}\n\nexport default HUD;","import HUD from \"../hud\";\nimport { connectedPlayers } from \"./server_utils\";\nlet playerHUD \n\nexport let thisPlayer\n\nconst settingNewPlayer = player => {\n    thisPlayer = thisPlayer || connectedPlayers[player]\n}\n\nexport const modal = ctx => {\n    ctx.fillStyle = \"rgba(0,0,0,0.7)\"\n    ctx.fillRect(0, 0, 800, 500)\n    //cover background with darker box, emphasizing foreground menu\n}\n\nexport const clearWithHUD = (canv, ctx) => {\n    ctx.clearRect(0, 0, 800, 500);\n    if (!thisPlayer) settingNewPlayer(sessionStorage.getItem(\"player\"));\n    playerHUD = playerHUD || new HUD(canv, thisPlayer, 2)\n    playerHUD.render()\n}\n\nexport class rectButton {\n    constructor(canv, onClick, { name, x, y, w, h, fill, strokeColor, strokeWidth, noStroke = true, buttonText, textColor, font } ) {\n        this.name = name;\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n        this.fill = fill;\n        this.strokeColor = strokeColor;\n        this.strokeWidth = strokeWidth;\n        this.noStroke = noStroke;\n        \n        \n        this.canv = canv\n        this.onClick = onClick\n        \n        this.buttonText = buttonText;\n        this.font = font\n        this.textColor = textColor || \"black\";\n        \n        this.clicked = this.clicked.bind(this)\n    }\n\n    render(bgColorChange){\n        const ctx = this.canv.getContext(\"2d\")\n        ctx.save();\n        ctx.beginPath();\n        if (this.fill) ctx.fillStyle = this.fill;\n        if (bgColorChange) ctx.fillStyle = bgColorChange;\n        if (this.strokeColor) ctx.strokeStyle=this.strokeColor;\n        if (this.strokeWidth) ctx.lineWidth=this.strokewidth;\n        ctx.rect(this.x, this.y, this.w, this.h);\n        if ( !this.noStroke ) ctx.stroke();\n        ctx.fill();\n\n        if (this.buttonText) {\n            ctx.fillStyle = this.textColor;\n            ctx.textAlign = \"center\";\n            ctx.textBaseline = \"middle\";\n            ctx.fillText(this.buttonText, (this.x + ( this.w / 2 )), (this.y + ( this.h / 2 )) )\n        }\n        \n        ctx.restore();\n    }\n\n    mouseInside(x,y){\n        return (\n            ( x > this.x && x < (this.x + this.w) ) &&\n            (  y > this.y && y < (this.y + this.h) )\n        )\n    }\n\n    clicked(e){\n        const bounds = this.canv.getBoundingClientRect();\n\n        const mouseXPos = e.clientX - bounds.x;\n        const mouseYPos = e.clientY - bounds.y;\n        if (this.mouseInside(mouseXPos, mouseYPos)) {\n            this.onClick();\n        }\n    }\n}","class Player {\n    constructor({ color, name = \"anonymous\", health = 100, textColor }) {\n        this.color = color;\n        this.name = name;\n        this.health = health;\n        this.points = 0;\n        this.textColor = textColor;\n    }\n\n    earnPoints(numPoints) {\n        this.points += numPoints\n        this.health -= (numPoints * 2)\n    }\n\n    lose(){\n        return this.health <= 0\n    }\n\n    percent(){\n        return this.health / 100\n    }\n}\n\nexport default Player;","import Player from \"../player/humanPlayer\"\n// import { socket } from \"../../../server\"\n\nexport let connectedPlayers = {}\n\nsocket.on(\"state\", ( {players} ) => {\n    const newConnected = {}\n    Object.keys(players).forEach( connection => {\n        if ( connectedPlayers[connection] ) {\n            newConnected[connection] = connectedPlayers[connection]\n        }\n        else {\n            newConnected[connection] = new Player(players[connection])\n        }\n    } )\n    connectedPlayers = newConnected\n})\n","import { connectedPlayers } from \"./server_utils\";\n\nexport const shufflePlayerOrder = (allPlayers) => {\n    const order = [];\n    while (allPlayers.length > 0) {\n        order.push(\n            allPlayers.splice(\n                Math.floor( Math.random() * allPlayers.length ), 1\n            )[0]\n        )\n    }\n    return order\n}\n\nexport const shuffleConnectedPlayers = () => {\n    const allPlayers = Object.keys(connectedPlayers)\n    return shufflePlayerOrder(allPlayers)\n}","import Player from \"./humanPlayer\";\n\nclass pigAi extends Player {\n    constructor(){\n        super({name: \"Coil the Warforged\", color: \"#cd9575\", textColor: \"white\"})\n    }\n}\n\nexport default pigAi;","const loader = (sources, images, callback) => {\n    Object.keys(sources).forEach( name => {\n        if ( !images[name] ) {\n            let image = new Image();\n            image.src = sources[name];\n            image.onload = () => {\n                images[name] = image\n                callback(name, image)\n            }\n        } else {\n            callback(name, images[name]);\n        }\n    })\n    return true\n}\n\nexport let imagesStore = {}\n\nexport const loadImages = ( sources, callback, images = imagesStore) => {\n    loader(sources, images, callback);\n    return images\n}","import one from \"../../../resources/pixel_assets/dice/1.png\";\nimport two from \"../../../resources/pixel_assets/dice/2.png\";\nimport three from \"../../../resources/pixel_assets/dice/3.png\";\nimport four from \"../../../resources/pixel_assets/dice/4.png\";\nimport five from \"../../../resources/pixel_assets/dice/5.png\";\nimport six from \"../../../resources/pixel_assets/dice/6.png\";\nimport { shufflePlayerOrder } from \"../utils/game_utils\"\nimport pigAi from \"../player/pigAi\";\nimport { clearWithHUD, rectButton, thisPlayer } from \"../utils/canvas_utils\";\nimport { loadImages, imagesStore } from \"../utils/loading_utils\";\nimport { connectedPlayers } from \"../utils/server_utils\";\n\nclass pig {\n    constructor( canv, ctx ) {\n        this.currentPlayerIndex = 0;\n\n        this.canv = canv;\n        this.ctx = ctx;\n\n        this.user = thisPlayer\n\n        this.numRolls = 0;\n        this.tempScore = 0;\n\n        socket.on(\"hold\", () => {\n            this.endTurn()\n        });\n        socket.on(\"roll\", roll => {\n            this.turn(roll)\n        })\n    }\n    \n\n    switchPlayers(){\n        this.currentPlayerIndex = \n            (this.currentPlayerIndex + 1 ) < (this.playerOrder.length) ?\n                this.currentPlayerIndex + 1 : 0\n        this.currentPlayer = this.playerOrder[this.currentPlayerIndex]\n    }\n\n    roll(){\n        return Math.floor(Math.random() * 6 + 1)\n    }\n\n    btnColor(){\n        return this.user === this.currentPlayer ? \"green\" : \"grey\"\n    }\n\n    face(result){\n        switch (result) {\n            case 1:\n                return \"one\";\n            case 2:\n                return \"two\";\n            case 3:\n                return \"three\";\n            case 4:\n                return \"four\";\n            case 5:\n                return \"five\";\n            case 6:\n                return \"six\"\n            default:\n                return null;\n        }\n    }\n\n    endTurn(){\n        this.scores[this.currentPlayerIndex] += this.tempScore;\n        this.tempScore = 0;\n        this.numRolls = 0;\n        this.currentPlayer = null;\n        this.render();\n        setTimeout( () => {\n            this.switchPlayers();\n            this.render()\n            this.playTurn();\n        }, 750)\n\n    }\n\n    handleOne(){\n        this.tempScore = 0;\n        this.currentPlayer.earnPoints(this.numRolls);\n        this.endTurn(1)\n    }\n\n    rollEvent(){\n        const roll = this.roll()\n        socket.emit(\"roll\", roll)\n        this.turn(roll)\n    }\n\n    turn(roll){\n        this.numRolls += 1;\n        if (roll === 1) {\n            this.handleOne();\n        } else {\n            this.tempScore += roll;\n        }\n        this.render(roll)\n        return roll !== 1\n    }\n\n    roboTurn() {\n        setTimeout( () => {\n            if ( this.tempScore < 15 ) {\n                if ( this.turn(this.roll()) ) this.roboTurn();\n            } else {\n                this.endTurn();\n            }\n        }, 750 )\n    }\n\n    render(result, winner, holding = false){\n        const ctx = this.ctx;\n        clearWithHUD(this.canv, ctx);\n        \n        ctx.beginPath();\n        ctx.rect(85,375,630,100)\n        ctx.strokeStyle = \"black\";\n        ctx.fillStyle = \"antiquewhite\";\n        this.ctx.closePath();\n        ctx.stroke();\n        ctx.fill();\n\n        ctx.beginPath();\n        ctx.rect(300,125,200,175)\n        ctx.fillStyle = \"#5e2f2f\"\n        ctx.strokeStyle = \"#2f2016\"\n        ctx.lineWidth = 10\n        this.ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n        if ( this.currentPlayer !== null ) {\n            this.lastRoll = this.face(result)\n            this.activePlayer = this.currentPlayer\n        }\n        if ( holding ) {\n            this.rollBtn.render(\"grey\");\n            this.holdBtn.render(\"grey\");\n        } else {\n            this.rollBtn.render(this.btnColor());\n            this.holdBtn.render(this.btnColor());\n        }\n        ctx.beginPath();\n        if ( ( result || this.currentPlayer === null ) && !holding ) {\n            let face = this.face(result) || this.lastRoll;\n            if ( imagesStore[face] ) {\n                this.diceRender(imagesStore[face])\n            } else {\n                loadImages( this.sources, (name, img) => {\n                    if ( name === face ) this.diceRender(img)\n                })\n            }\n        }\n        this.ctx.closePath();\n        ctx.lineWidth = 1\n        if ( winner ) {\n            ctx.fillText(`${winner.name} wins!`, 400, 425)\n        } else if ( holding ) {\n            ctx.fillText(`Waiting for all players to join`, 400, 425);\n        } else {\n            ctx.textAlign = \"center\";\n            ctx.fillText(`Current: ${this.tempScore}`, 400, 420)\n            ctx.fillText(this.user.name, 190, 400)\n            ctx.fillText(this.scores[this.myIdx], 190, 440)\n            ctx.textAlign = \"right\"\n            ctx.fillText(\"Rolling Now\", 700, 400)\n            ctx.fillStyle = this.activePlayer.textColor;\n            ctx.strokeStyle = this.activePlayer.color;\n            ctx.fillText(this.activePlayer.name, 700, 420);\n            ctx.strokeText(this.activePlayer.name, 700, 420);\n            \n            ctx.fillStyle = this.user.color\n            ctx.fillRect(135,408,100,15)\n            let n = 0\n            ctx.textAlign = \"center\"\n            this.playerOrder.forEach( ( player, i ) => {\n                if ( player !== this.user ) {\n                    ctx.fillStyle = player.color\n                    ctx.fillRect((675 - (n * 45)), 440, 30, 20)\n                    ctx.fillStyle = player.textColor\n                    ctx.fillText(this.scores[i], 690 - (n * 45), 455)\n                    n += 1\n                }\n            })\n        }\n    }\n\n    diceRender(img) {\n        this.ctx.beginPath();\n        this.ctx.drawImage(img, 369, 181)\n        this.ctx.closePath();\n    }\n\n    play(){\n        this.rollBtn = new rectButton(this.canv, () => {\n            if ( this.user === this.currentPlayer ) {\n                this.rollEvent();\n            }}, {\n            name: \"roll\",\n            x: 150,\n            y: 172.5,\n            w: 130,\n            h: 40,\n            buttonText: \"ROLL\",\n            textColor: \"white\",\n            font: \"20px Georgia\"\n        })\n        this.holdBtn = new rectButton(this.canv, () => {\n            if ( this.user === this.currentPlayer ) {\n                socket.emit(\"hold\")\n                this.endTurn();\n            }\n        }, {\n            name: \"hold\",\n            x: 150,\n            y: 222.5,\n            w: 130,\n            h: 40,\n            buttonText: \"HOLD\",\n            textColor: \"white\",\n            font: \"20px Georgia\"\n        })\n        this.canv.addEventListener(\"click\", this.rollBtn.clicked);\n        this.canv.addEventListener(\"click\", this.holdBtn.clicked);\n\n        this.sources = { one, two, three, four, five, six };\n        this.render();\n        this.playTurn();\n\n    }\n\n    preRender(){\n        this.rollBtn = new rectButton(this.canv, () => {}, {\n            name: \"roll\",\n            x: 150,\n            y: 172.5,\n            w: 130,\n            h: 40,\n            buttonText: \"ROLL\",\n            textColor: \"white\",\n            font: \"20px Georgia\"\n        })\n        this.holdBtn = new rectButton(this.canv, () => {}, {\n            name: \"hold\",\n            x: 150,\n            y: 222.5,\n            w: 130,\n            h: 40,\n            buttonText: \"HOLD\",\n            textColor: \"white\",\n            font: \"20px Georgia\"\n        })\n\n        const allPlayers = Object.values(connectedPlayers)\n\n        \n        if ( allPlayers.length === 1 ) {\n            allPlayers.push(new pigAi())\n            this.shuffleToBegin(allPlayers);\n            this.play();\n        } else {\n            this.render(null,null,true);\n        }   \n    }\n\n    shuffleToBegin(allPlayers){\n        const numPlayers = allPlayers.length;\n        this.scores = new Array(numPlayers).fill(0)\n        this.playerOrder = shufflePlayerOrder(allPlayers)\n        this.currentPlayer = this.playerOrder[this.currentPlayerIndex]\n        this.myIdx = this.user === this.currentPlayer ? 0 : 1;\n    }\n\n    setup(order) {\n        this.playerOrder = order.map( ( connection, i) => {\n            if ( connection === socket.id ) this.myIdx = i;\n            return connectedPlayers[connection]\n        } )\n        this.scores = new Array(this.playerOrder.length).fill(0)\n        this.currentPlayer = this.playerOrder[0]\n        this.play()\n    }\n\n    playTurn(){\n        if ( !this.gameOver() ) {\n            if ( this.currentPlayer instanceof pigAi ) {\n                this.roboTurn();\n            }\n        } else {\n            this.win();\n        }\n    }\n\n    win(){\n        const idx = this.scores.findIndex( score => score >= 100 )\n        const winner = this.playerOrder[idx]\n        this.currentPlayer === null\n        this.render(undefined, winner)\n    }\n\n    gameOver(){\n        const test = this.scores.find( score => score >= 100 )\n        return !!test\n    }\n\n}\n\nexport default pig;","export default \"pixel_assets/1.png\";","export default \"pixel_assets/2.png\";","export default \"pixel_assets/3.png\";","export default \"pixel_assets/4.png\";","export default \"pixel_assets/5.png\";","export default \"pixel_assets/6.png\";","import { clearWithHUD, thisPlayer } from \"../utils/canvas_utils\";\nimport pig from \"./pig-game\";\nimport { shuffleConnectedPlayers } from \"../utils/game_utils\";\nimport { connectedPlayers } from \"../utils/server_utils\";\n\nlet control\n\nconst pigDisplay = (canv, ctx) => {\n    \n    clearWithHUD(canv, ctx);\n    const game = new pig(canv, ctx, [ thisPlayer ])\n    game.preRender();\n    if ( Object.keys(connectedPlayers).length !== 1 ) {\n        socket.on(\"all ready\", controllingPlayer => {\n            if ( socket.id === controllingPlayer ) {\n                const order =  shuffleConnectedPlayers()\n                socket.emit(\"shuffled order\", order)\n            }\n        })\n        socket.on(\"player order\", order => {\n            game.setup(order)\n        })\n    }\n}\n\nexport default pigDisplay;\n","import { modal, rectButton, clearWithHUD } from \"../utils/canvas_utils\"\nimport pig from \"./pig-display\";\n// import { socket } from \"../../../server\";\n\nconst pigInstructions = (canv, ctx) => {\n    clearWithHUD(canv, ctx);\n    modal(ctx)\n\n    ctx.beginPath();\n    ctx.rect(50,50,700,400);\n    ctx.fillStyle = \"antiquewhite\";\n    ctx.strokeStyle = \"grey\"\n    ctx.stroke();\n    ctx.fill();\n    ctx.fillStyle = \"black\"\n    ctx.textAlign = \"center\";\n    ctx.fillText(\"How to Play Pig:\", 400, 100)\n\n    const start = new rectButton(canv, () => {\n            socket.emit(\"ready\")\n            pig(canv, ctx);\n        }, {\n        name: \"start-pig-btn\",\n        x: 325,\n        y: 350,\n        w: 150,\n        h: 50,\n        fill: \"red\",\n        buttonText: \"Begin\",\n        textColor: \"white\"\n    })\n    start.render();\n    canv.addEventListener(\"click\", start.clicked );\n\n    ctx.fillText(\"Num Players: (temporarily locked at 2: one human, one AI)\", 400, 425)\n}\n\nexport default pigInstructions;","import { modal, rectButton, clearWithHUD } from \"./utils/canvas_utils\"\nimport pigInstructions from \"./pig/instructions\";\n\n\nconst chooseGame = (canv, ctx) => {\n    clearWithHUD(canv, ctx);\n    modal(ctx)\n\n    ctx.beginPath();\n    ctx.rect(275,75,250,350);\n    ctx.fillStyle = \"antiquewhite\";\n    ctx.strokeStyle = \"grey\"\n    ctx.stroke();\n    ctx.fill();\n    ctx.fillStyle = \"black\"\n    ctx.textAlign = \"center\";\n    ctx.fillText(\"What would you like to play?\", 400, 100)\n\n    const pigButton = new rectButton(canv, () => pigInstructions(canv, ctx), {\n        name: \"pig-btn\",\n        x: 325,\n        y: 120,\n        w: 150,\n        h: 50,\n        fill: \"red\",\n        buttonText: \"Pig\",\n        textColor: \"white\"\n    })\n    pigButton.render();\n    canv.addEventListener(\"click\", pigButton.clicked );\n}\n\nexport default chooseGame;","import { modal, rectButton, clearWithHUD } from \"./utils/canvas_utils\"\nimport chooseGame from \"./choose_game\";\nconst welcomeScreen = (canv, ctx) => {\n    clearWithHUD(canv, ctx);\n    modal(ctx)\n    ctx.textAlign = \"center\"\n    ctx.fillStyle = \"#FFFFFF\";\n    ctx.font = \"14px Georgia\";\n    ctx.fillText(\"welcome to\", 400, 150);\n    ctx.font = \"30px Georgia\";\n    ctx.fillText(\"THE TAVERN\", 400, 180);\n    \n    ctx.font = \"18px Georgia\"\n    ctx.fillText(\"Click to Enter\", 400, 280)\n    \n\n    canv.addEventListener(\"click\", settingExplanation(canv, ctx), {once: true} )\n    \n}\n\nconst settingExplanation = ( canv, ctx ) => () => {\n    clearWithHUD(canv, ctx);\n    modal(ctx)\n\n    // Replace with pixel-drawn box eventually\n    ctx.beginPath();\n    ctx.rect(200,75,400,350);\n    ctx.fillStyle = \"antiquewhite\";\n    ctx.strokeStyle = \"grey\"\n    ctx.stroke();\n    ctx.fill();    \n\n    ctx.textAlign = \"center\"\n    ctx.font = \"16px Georgia\"\n    ctx.fillStyle = \"black\"\n    ctx.fillText(\"Sometimes, adventuring isn't easy..\", 400, 125)\n    \n    ctx.font = \"12px Georgia\";\n    const introText = [\n        \"     You step out of the cold, damp night into the warm glow of the\",\n        \"local inn. As you push your way through the patrons to an unoccupied\",\n        \"table, your adventuring companions cluster in behind you. It's been a\",\n        \"rough day: a quest was abandoned, your rogue tried and conspicuously\",\n        \"failed to steal a priceless artifact, and somewhere a distressed damsel\",\n        \"remains decidedly un-saved. But there's nothing you can do about any\",\n        \"of that now. By all the Gods, you need a drink.\"\n    ]\n\n    ctx.textAlign = \"left\"\n    introText.forEach( (str, i) => ctx.fillText(str, 225, 150 + (i * 16) ));\n    ctx.font = \"15px Georgia\"\n    const explText = [\n        \"Luckily, you have cards and dice in your pack,\",\n        \"and the bar seems to have plenty of ale.\"\n    ]\n\n    ctx.textAlign = \"center\"\n    explText.forEach( (str, i) => ctx.fillText(str, 400, 275 + ( i * 20 )) );\n\n    const buttonTest = new rectButton(canv, () => chooseGame(canv, ctx), {\n        name: \"test\",\n        x: 350,\n        y: 325,\n        w: 100,\n        h: 50,\n        fill: \"blue\",\n        buttonText: \"Click me\",\n        textColor: \"white\"\n    })\n    buttonTest.render()\n    canv.addEventListener(\"click\", buttonTest.clicked, {once: true} );\n}\n\nexport default welcomeScreen;","import welcomeScreen from \"./welcomeScreen\";\nimport { modal } from \"./utils/canvas_utils\";\n\nconst chooseName = (canv, ctx) => {\n    if ( !sessionStorage.getItem(\"player\") ) {\n        modal(ctx)\n\n        ctx.beginPath();\n        ctx.rect(150,200,500,100);\n        ctx.fillStyle = \"antiquewhite\";\n        ctx.strokeStyle = \"grey\"\n        ctx.stroke();\n        ctx.fill();\n\n        ctx.textAlign = \"center\"\n        ctx.fillStyle = \"black\"\n        ctx.font = \"30px Georgia\"\n        ctx.fillText(\"Start or join a game above to begin!\", 400, 255)\n    } else {\n        welcomeScreen(canv,ctx)\n    }\n}\n\nexport default chooseName\n\n// arr = [{ state: \"NY\" }, { state: \"CA\" }, { state: \"NY\" },{ state: \"NY\" },{ state: \"CA\" },{ state: \"MI\" }]\n// counts = {NY: 0, CA: 0, MI: 0}\n// arr.forEach(obj => {\n//     // counts[obj.state] = counts[obj.state] ? counts[obj.state] + 1 : 1\n//     counts[obj.state] += 1\n// })","import chooseName from \"./chooseName\";\n// import pig from \"./pig/pig-game\";\n// import Player from \"./player/humanPlayer\";\n// import src from \"../../resources/pixel_assets/general/mug.png\"\n// import { loadImages } from \"./utils/loading_utils\";\n\nconst setup = () => {\n    const canvas = document.getElementById(\"game\");\n    const ctx = canvas.getContext(\"2d\");\n    chooseName(canvas, ctx);\n}\n\nexport default setup;","import Player from \"../game/player/humanPlayer\";\nimport { connectedPlayers } from \"../game/utils/server_utils\";\nimport setup from \"../game/baseSetup\";\n\nconst joinGame = () => {\n    const joinBtn = document.getElementById(\"join\");\n    const modal = document.getElementById(\"new-player-modal\")\n\n    const nameInput = document.getElementById(\"name\");\n    const colorInput = document.getElementById(\"color\");\n    const textColorInput = document.getElementById(\"text-color\");\n    const demo = document.getElementById(\"demo\");\n    const submitBtn = document.getElementById(\"player-submit\");\n\n    joinBtn.addEventListener(\"click\", () => {\n        modal.className = modal.className ? \"\" : \"hidden\"\n    })\n\n    let currentName = \"\";\n    let color = \"#aa80c2\";\n    let textColor = \"#2c2330\";\n\n    nameInput.addEventListener(\"input\", e => {\n        currentName = e.target.value;\n        demo.innerHTML = `<span>${ currentName }</span>`\n    })\n\n    colorInput.addEventListener(\"change\", e => {\n        color = e.target.value;\n        demo.style = `color: ${ textColor }; background: ${ color }`\n    })\n\n    textColorInput.addEventListener(\"change\", e => {\n        textColor = e.target.value;\n        demo.style = `color: ${ textColor }; background: ${ color }`\n    })\n\n    submitBtn.addEventListener(\"click\", e => {\n        e.preventDefault();\n        if (!sessionStorage.getItem(\"player\")) {\n            socket.emit(\"new player\", { name: currentName, color, textColor })\n            setTimeout( () => {\n                sessionStorage.setItem(\"player\", socket.id)\n                setup();\n            }, 500 )\n        }\n    })\n}\n\nexport default joinGame;","import style from \"./styles/index.scss\";\nimport setup from \"./game/baseSetup\"\nimport joinGame from \"./join/joinGame\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    sessionStorage.removeItem(\"player\")\n    joinGame();\n    setup();\n})"],"sourceRoot":""}